
;------- parameters for the "saml" module
[saml]
automaticAccountCreation = on
allowSAMLAccountToUseLocalPassword = on
forceSAMLAuthOnPrivatePage = off
forceSAMLAuthOnLoginPage = off
forceRedirectToSAMLAuthOnLoginPage = off

[saml:sp]

; Identifier of the application as registered into the IdP server
entityId=

; Contact information template, it is recommended to supply a technical and
; support contacts
technicalContactPerson[givenName]=
technicalContactPerson[emailAddress]=
supportContactPerson[givenName]=
supportContactPerson[emailAddress]=

organization[name] =
organization[displayname] =
organization[url] =

compressRequests=on
compressResponses=on


; If you need to specify requested attributes, set the service name into attrcs_service_name
; and fill the saml:sp:requestedAttributes section with the list of requested attributes
attrcs_service_name=
attrcs_service_description=

; enable debug or not in the SAML library
saml_debug = off

; list of dao properties that can be used for mapping.
; list of names separated by a coma
; if empty, all dao properties (strings) can be used for mapping
daoPropertiesForMapping=""

[saml:sp:requestedAttributes]
;<attribute name>[isRequired]=on or off
;<attribute name>[nameFormat]=  ; optional
;<attribute name>[friendlyName]= ; optional
;<attribute name>[attributeValue]= ; optional


[saml:attributes-mapping]
; indicate on which properties of the DAO record, attributes given by the idp should be stored
; __login is a not a property, but indicates which attribute contains the user login.
__login=uid
; <dao property>=<saml attribute>

; identity provider
[saml:idp]

; label to display in the interface and in the login form
label=

; Identifier of the IdP entity  (must be a URI)
entityId=

; --  SSO endpoint info of the IdP. (Authentication Request protocol)
;  URL Target of the IdP where the SP will send the Authentication Request Message
singleSignOnServiceUrl=
; SAML protocol binding to be used when returning the <Response> message.
; possible binding: http-post, http-redirect, http-artifact, soap, deflate
singleSignOnServiceBinding=http-redirect

; -- SLO endpoint info of the IdP.
; URL Location of the IdP where the SP will send the SLO Request
singleLogoutServiceUrl=

; URL location of the IdP where the SP SLO Response will be sent (ResponseLocation)
; if not set, url for the SLO Request will be used
singleLogoutServiceResponseUrl=

; SAML protocol binding to be used when returning the <Response> message.
; possible binding: http-post, http-redirect, http-artifact, soap, deflate
singleLogoutServiceBinding=http-redirect

; In some scenarios the IdP uses different certificates for
; signing/encryption, or is under key rollover phase and more
; than one certificate is published on IdP metadata.
; In order to handle that, you must indicate certificate files names,
; separated by a coma. Files should be stored into the var/config/saml/certs/ directory
; If there is only one certificate file for signing/encryption, just leave
; following parameter empty, and put a idp.crt file into var/config/saml/certs/

certs_signing_files=
certs_encryption_files=

; signatures and encryptions offered
[saml:security]

; Indicates that the nameID of the <samlp:logoutRequest> sent by this SP
; will be encrypted.
nameIdEncrypted=off

; Indicates whether the <samlp:AuthnRequest> messages sent by this SP
; will be signed.              [The Metadata of the SP will offer this info]
authnRequestsSigned=off

; Indicates whether the <samlp:logoutRequest> messages sent by this SP
; will be signed.
logoutRequestSigned=off

; Indicates whether the <samlp:logoutResponse> messages sent by this SP
; will be signed.
logoutResponseSigned=off

; Sign the Metadata
signMetadata=off

;-- signatures and encryptions required

; Indicates a requirement for the <samlp:Response>, <samlp:LogoutRequest> and
; <samlp:LogoutResponse> elements received by this SP to be signed.
wantMessagesSigned=off

; Indicates a requirement for the <saml:Assertion> elements received by
; this SP to be encrypted.
wantAssertionsEncrypted=off

; Indicates a requirement for the <saml:Assertion> elements received by
; this SP to be signed.        [The Metadata of the SP will offer this info]
wantAssertionsSigned=off

; Indicates a requirement for the NameID element on the SAMLResponse received
; by this SP to be present.
wantNameId=on

; Indicates a requirement for the NameID received by
; this SP to be encrypted.
wantNameIdEncrypted=off

; Authentication context.
; Set to false and no AuthContext will be sent in the AuthNRequest,
; Set true or don't present this parameter and you will get an AuthContext 'exact' 'urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport'
; Set an array with the possible auth context values: array('urn:oasis:names:tc:SAML:2.0:ac:classes:Password', 'urn:oasis:names:tc:SAML:2.0:ac:classes:X509'),
requestedAuthnContext=off

; Allows the authn comparison parameter to be set, defaults to 'exact' if
; the setting is not present.
requestedAuthnContextComparison=exact

; Indicates if the SP will validate all received xmls.
; (In order to validate the xml, 'strict' and 'wantXMLValidation' must be true).
wantXMLValidation=on

; If true, SAMLResponses with an empty value at its Destination
; attribute will not be rejected for this fact.
relaxDestinationValidation=off

; If true, Destination URL should strictly match to the address to
; which the response has been sent.
; Notice that if 'relaxDestinationValidation' is true an empty Destintation
; will be accepted.
destinationStrictlyMatches=off

; If true, SAMLResponses with an InResponseTo value will be rejectd if not
; AuthNRequest ID provided to the validation method.
rejectUnsolicitedResponsesWithInResponseTo=off

; Algorithm that the toolkit will use on signing process. Options:
;    'http://www.w3.org/2000/09/xmldsig#rsa-sha1'
;    'http://www.w3.org/2000/09/xmldsig#dsa-sha1'
;    'http://www.w3.org/2001/04/xmldsig-more#rsa-sha256'
;    'http://www.w3.org/2001/04/xmldsig-more#rsa-sha384'
;    'http://www.w3.org/2001/04/xmldsig-more#rsa-sha512'
; Notice that rsa-sha1 is a deprecated algorithm and should not be used
signatureAlgorithm="http://www.w3.org/2001/04/xmldsig-more#rsa-sha256"

; Algorithm that the toolkit will use on digest process. Options:
;    'http://www.w3.org/2000/09/xmldsig#sha1'
;    'http://www.w3.org/2001/04/xmlenc#sha256'
;    'http://www.w3.org/2001/04/xmldsig-more#sha384'
;    'http://www.w3.org/2001/04/xmlenc#sha512'
; Notice that sha1 is a deprecated algorithm and should not be used
digestAlgorithm="http://www.w3.org/2001/04/xmlenc#sha256"

; ADFS URL-Encodes SAML data as lowercase, and the toolkit by default uses
; uppercase. Turn it True for ADFS compatibility on signature verification
lowercaseUrlencoding=off
